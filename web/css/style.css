/* ==========================================================================
   1) Design tokens (CSS variables)
   ========================================================================== */
:root {
  --background: #fff;
  --text: #1e1c1c;
  --menu-background: #1e1c1c;
  --menu-item-hover: #ffffff14;
  --button-text: #fff;
  --accent: #017201;
  --accent-hover: #134c0c;
  --item-hover: #f5f5f5;
  --line: #e7e7e7;
  --muted: #6b7280;
  --disabled-background: #e5e7eb;
  --disabled-border: #d1d5db;
  --error: #a62622;
  --error-hover: #800000;
  --error-background: #fff6f6;
  --empty: #9fb0c7;
  --turnout-stroke: #b8c1cc;
  --light-stroke: #b8c1cc;
  --busy-overlay: #00000059;
}

/* ==========================================================================
   2) Base / Reset
   ========================================================================== */
body {
  margin: 0;
  font-family:
    Poppins,
    system-ui,
    Segoe UI,
    Roboto,
    Helvetica,
    Arial,
    sans-serif;
  background: var(--background);
  color: var(--text);
}

button,
.btn,
.btn-primary,
.icon-btn,
.nav-btn,
.image-drop,
summary {
  cursor: pointer;
}

/* ==========================================================================
   3) Visibility / Panels
   ========================================================================== */
[data-panel] {
  display: block;
}
[data-panel][hidden] {
  display: none !important;
}
.hidden {
  display: none !important;
}

/* ==========================================================================
   4) Typography
   ========================================================================== */
.title {
  font-size: 1.5rem;
  font-weight: 600;
  margin: 0;
}

/* ==========================================================================
   5) App layout
   ========================================================================== */
#app {
  display: flex;
  min-height: 100vh;
}
.sectionContainer {
  width: 100%;
}

.main {
  flex: 1;
  display: flex;
  flex-direction: column;
}

.content {
  padding: 0.75rem;
  overflow-x: hidden;
}

/* ==========================================================================
   6) Drawer (side nav)
   ========================================================================== */
.drawer {
  position: fixed;
  inset: 4.375rem auto 0 0;
  width: 17.5rem;
  background: var(--menu-background);
  color: var(--background);
  transform: translateX(-100%);
  transition: transform 0.25s;
}
.drawer.open {
  transform: none;
}

.drawer-header {
  display: flex;
  gap: 0.625rem;
  padding: 0.875rem;
  border-bottom: 0.0625rem solid var(--line);
}

.logo-square {
  width: 2.25rem;
  height: 2.25rem;
  border-radius: 0.375rem;
  background: var(--accent);
}

.railroad-name {
  font-size: 1.125rem;
  font-weight: 600;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.drawer-nav {
  display: flex;
  flex-direction: column;
  padding: 0.375rem;
}

/* Base nav button */
.nav-btn {
  padding: 0.375rem 0.625rem;
  border-radius: 0.375rem;
  border: 0;
}

/* Drawer-specific nav buttons (scoped to avoid global overrides) */
.drawer-nav .nav-btn {
  background: transparent;
  color: var(--background);
  text-align: left;
  padding: 0.75rem 0.875rem;
  font-size: 1.125rem;
}
.drawer-nav .nav-btn:hover {
  background: var(--menu-item-hover);
}

/* Active nav state */
.nav-btn.active {
  background: var(--accent-hover);
  color: var(--background);
  box-shadow: 0 0 0 0.0625rem var(--text) inset;
}

/* ==========================================================================
   7) Top bar
   ========================================================================== */
.topbar {
  display: flex;
  align-items: center;
  gap: 0.625rem;
  height: 3.125rem;
  padding: 0.625rem 0.75rem;
  border-bottom: 0.0625rem solid var(--line);
  position: sticky;
  top: 0;
  background: var(--background);
}
.last-item {
  margin-left: auto;
}

/* ==========================================================================
   8) Buttons
   ========================================================================== */
.icon-btn {
  border: 0;
  padding: 0.5rem 0.625rem;
  border-radius: 0.375rem;
}

.btn,
.btn-primary {
  border: 0;
  border-radius: 0.375rem;
  padding: 0.625rem 0.875rem;
}

.btn-primary {
  background: var(--accent);
  color: var(--button-text);
}

.icon-btn,
.btn {
  color: var(--accent);
  background: var(--button-text);
  border: 0.0625rem solid var(--accent);
}

.btn-primary:hover {
  background: var(--accent-hover);
}
.icon-btn:hover,
.btn:hover {
  color: var(--background);
  background: var(--accent-hover);
}

button,
input[type="button"],
input[type="submit"] {
  transition:
    transform 120ms ease,
    box-shadow 120ms ease,
    opacity 120ms ease;
}

input:read-only,
button:disabled,
input[type="button"]:disabled,
input[type="submit"]:disabled {
  cursor: not-allowed;
  opacity: 0.45;
  filter: grayscale(100%);
  box-shadow: none;
  transform: none;
}

input:read-only:hover,
button:disabled:hover,
button:disabled:focus {
  box-shadow: none;
  transform: none;
}

input:read-only,
button:disabled svg {
  opacity: 0.7;
}

input:read-only,
button:disabled {
  background-color: var(--disabled-background);
  color: var(--muted);
  border-color: var(--disabled-border);
}

.split-add {
  display: inline-flex;
  position: relative;
  gap: 0;
  margin-left: auto;
}

.split-add .add-button {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.btn-slim {
  padding: 0 0.625rem;
  border-radius: 0.375rem;
  display: grid;
  place-items: center;
  line-height: 1;
  min-height: 100%;
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.split-add .btn-slim {
  border-left: 0;
}

.split-add__more {
  position: relative;
}
.split-add__more .menu {
  position: absolute;
  top: calc(100% + 0.375rem);
  right: 0;
  min-width: 7.1875rem;
  background: var(--background);
  border: 0.0625rem solid var(--line);
  border-radius: 0.375rem;
  box-shadow: 0 0.5rem 1.5rem var(--busy-overlay);
  padding: 0.375rem;
  z-index: 30;
}

.menu-item {
  width: 100%;
  text-align: left;
  background: transparent;
  border: 0;
  padding: 0.5rem 0.625rem;
  border-radius: 0.375rem;
  cursor: pointer;
  color: var(--text);
}
.menu-item:hover,
.menu-item:focus-visible {
  background: var(--item-hover);
  outline: none;
}

#addLocoMore[aria-expanded="true"] .chev {
  transform: rotate(180deg);
  transition: transform 120ms ease;
}

.btn-warn,
.fn-btn.danger {
  background: var(--error);
  color: var(--button-text);
  border: 0.0625rem solid var(--error);
}

.btn-warn:hover,
.fn-btn.danger:hover {
  background: var(--error-hover);
  border: 0.0625rem solid var(--error-hover);
}

/* ==========================================================================
   8a) Checkboxes
   ========================================================================== */
/* Checkbox accent + sizing */
input[type="checkbox"] {
  accent-color: var(--accent); /* Chrome/Edge/Firefox/Safari 15.4+ */
  width: 1.125rem;
  height: 1.125rem;
  cursor: pointer;
  filter: grayscale(0);
  opacity: 1;
}

/* Focus ring (accessible) */
input[type="checkbox"]:focus-visible {
  outline: 0.125rem solid var(--accent);
  outline-offset: 0.125rem;
}

/* Keep checkboxes aligned/unstretched in your grid row */
.form-col .grid input[type="checkbox"] {
  justify-self: start;
  padding: 0;
  border: 0;
}

/* Disabled appearance */
input[type="checkbox"]:disabled {
  opacity: 0.6;
  cursor: not-allowed;
}

/* ==========================================================================
   9) Panel body (card grid) & empty state
   ========================================================================== */
.panel-body {
  display: grid;
  gap: 0.75rem;
  grid-template-columns: repeat(auto-fill, minmax(25rem, 1fr));
}

.panel-header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 0.75rem;
  margin: 0.5rem 0 0.875rem;
}
.panel-actions {
  display: flex;
  gap: 0.5rem;
}

.empty {
  text-align: center;
  padding: 2rem 0.75rem;
  color: var(--empty);
}
.empty-title {
  font-weight: 600;
  color: var(--line);
}
.empty-subtitle {
  opacity: 0.9;
}

.copy-entryItem {
  position: fixed;
  inset: 0;
  background: transparent;
  z-index: 29;
}
.copy-popover {
  position: fixed;
  z-index: 30;
  width: 53.125rem;
  max-height: 80vh;
  background: var(--background);
  border: 0.0625rem solid var(--accent);
  border-radius: 0.375rem;
  display: grid;
  grid-template-rows: auto minmax(0, 1fr);
  overflow: hidden;
}

.copy-head {
  display: grid;
  grid-template-columns: 1fr auto;
  gap: 0.5rem;
  align-items: center;
  padding: 0.625rem;
  border-bottom: 0.0625rem solid var(--line);
}
.copy-search {
  width: auto;
  min-width: 0;
  padding: 0.625rem 0.75rem;
  border: 0.0625rem solid var(--line);
  border-radius: 0.375rem;
}
.copy-close {
  border: 0;
  background: transparent;
  padding: 0.375rem;
  cursor: pointer;
  border-radius: 0.375rem;
  position: relative;
  z-index: 1;
  pointer-events: auto;
}

.copy-list {
  min-height: 0;
  overflow: auto;
  -webkit-overflow-scrolling: touch;
  overscroll-behavior: contain;
  padding: 0.5rem;
  display: grid;
  align-items: baseline;
  gap: 0.5rem;
}

.copy-item {
  display: grid;
  grid-template-columns: 4rem 1fr auto;
  gap: 0.625rem;
  align-items: center;
  padding: 0.5rem;
  border: 0.0625rem solid var(--line);
  border-radius: 0.375rem;
  background: var(--background);
  cursor: pointer;
}
.copy-item:hover,
.copy-item[aria-selected="true"] {
  border: 0.0625rem solid var(--accent);
}
.copy-item-no-results {
  grid-template-columns: 100% 1fr auto;
}
.copy-thumb {
  width: 4rem;
  height: 2.75rem;
  border-radius: 0.375rem;
  background: var(--item-hover);
  overflow: hidden;
}
.copy-thumb img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  display: block;
}
.copy-main {
  min-width: 0;
}
.copy-title {
  font-weight: 600;
  overflow-wrap: anywhere;
}
.copy-sub {
  color: var(--muted);
  font-size: 0.9rem;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}
.copy-choose {
  border: 0;
  background: var(--accent);
  color: var(--button-text);
  padding: 0.5rem 0.625rem;
  border-radius: 0.375rem;
}

/* ==========================================================================
   10) Cards
   ========================================================================== */
.card {
  display: flex;
  gap: 0.625rem;
  border: 0.0625rem solid var(--line);
  border-radius: 0.375rem;
  padding: 0.625rem;
  background: var(--background);
  min-width: 0;
  cursor: pointer;
}

.card-img {
  width: 7.8125rem;
  height: 5.25rem;
  border-radius: 0.375rem;
  border: 0.0625rem solid var(--line);
  background: var(--background);
  overflow: hidden;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
}
.card-img img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

/* Roster card media */
.card-img-media {
  width: 100%;
  height: 100%;
  object-fit: cover;
  display: block;
}

/* Placeholder block shown when no image URL is available */
.card-img-placeholder {
  width: 100%;
  height: 100%;
  display: block;
  background: var(--line);
  border-radius: 0.375rem;
}

.card-body {
  min-width: 0;
  display: grid;
  grid-template-columns: repeat(2, minmax(0, 1fr));
  gap: 0.25rem 0.625rem;
  align-items: center;
  cursor: pointer;
}

.card-body-light,
.card-body-turnout {
  grid-template-columns: repeat(1, minmax(0, 1fr));
}

.card-title {
  font-weight: 600;
  white-space: normal;
  overflow: hidden;
  overflow-wrap: anywhere;
  text-overflow: ellipsis;
  word-break: break-word;
  grid-column: 1 / -1;
}

.card-sub {
  color: var(--muted);
  font-size: 0.9rem;
}

.card-actions {
  display: flex;
  gap: 0.375rem;
}

/* ==========================================================================
   11) Modal (dialog)
   ========================================================================== */
.modal {
  width: min(56.25rem, calc(100vw - 1.25rem));
  height: 100%;
  max-height: calc(100dvh - 1.25rem);
  margin: auto;
  border: 0.0625rem solid;
  border-radius: 0.375rem;
  padding: 0;
}
.modal::backdrop {
  background: var(--busy-overlay);
}

.modal-form {
  display: flex;
  flex-direction: column;
  height: 100%;
  max-height: inherit;
}

.modal-head,
.modal-foot {
  position: sticky;
  z-index: 2;
  background: var(--background);
  display: flex;
  align-items: center;
  gap: 0.625rem;
  padding: 0.625rem 0.75rem;
  border-bottom: 0.0625rem solid var(--line);
}
.modal-head {
  top: 0;
  min-block-size: 3.25rem;
}
.modal-foot {
  bottom: 0;
}
.modal-foot {
  border-top: 0.0625rem solid var(--line);
  border-bottom: 0;
  align-items: center;
}
.modal-foot .spacer {
  flex: 1;
}

.modal-body {
  flex: 1 1 auto;
  overflow: auto;
  display: grid;
  grid-template-columns: 1fr;
  gap: 0.75rem;
  padding: 0.75rem;
}

dialog#toastLayer {
  padding: 0;
  border: none;
  background: transparent;
  inset: 0;
  width: auto;
  height: auto;
  pointer-events: none; /* clicks pass through outside the toast */
}
dialog#toastLayer::backdrop {
  background: transparent; /* no dark overlay */
}

/* ==========================================================================
   11a) Modal (dialog) Tabs
   ========================================================================== */

/* Make dialog tabs fill the header's height */
.modal-head .tabs[role="tablist"] {
  display: flex;
  gap: 0.5rem;
  /* keep them next to the title; if you previously used margin-left:auto here, you can keep it */
  margin-left: auto;
  /* this is the key: stretch the tablist to the header height */
  align-self: stretch;
}

/* Each tab button fills the tablist height */
.modal-head .tab[role="tab"] {
  display: flex;
  align-items: center;
  /* full height of the parent header area */
  height: 100%;
  /* vertical padding becomes 0 so the visual height is truly full-height */
  padding: 0 0.75rem;

  border: 0;
  border-radius: 0;
  background: transparent;
  color: var(--text);
  cursor: pointer;

  /* full-height underline style for selection */
  /* (use box-shadow instead of borders to avoid layout shift) */
  box-shadow: inset 0 -0.1875rem transparent;
}

/* Hover/focus states */
.modal-head .tab[role="tab"]:hover {
  background: var(--menu-item-hover);
}
.modal-head .tab[role="tab"]:focus-visible {
  outline: 0.125rem solid var(--accent);
  outline-offset: 0.125rem;
}

/* Selected tab: accent underline + color */
.modal-head .tab[role="tab"][aria-selected="true"] {
  color: var(--accent);
  box-shadow: inset 0 -0.1875rem var(--accent);
}

/* Hide inactive panels (keeps ARIA happy & avoids layout flicker) */
[role="tabpanel"][hidden] {
  display: none !important;
}

/* ==========================================================================
   12) Image picker (drop zone)
   ========================================================================== */
.image-drop {
  position: relative;
  border: 0.0625rem dashed var(--line);
  border-radius: 0.375rem;
  height: 13, 75rem;
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: hidden;
  cursor: pointer;
  background: var(--background);
}
.image-drop.drag {
  outline: 0.1875rem dashed var(--accent);
  outline-offset: 0.25rem;
}

.modal-roster-image {
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: center;
  display: block;
}

.image-hint {
  position: absolute;
  bottom: 0.5rem;
  left: 0.5rem;
  right: 0.5rem;
  text-align: center;
  color: var(--button-text);
  font-size: 0.85rem;
  text-shadow: 0 0.0625rem 0.0625rem var(--text);
  pointer-events: none;
}

/* ==========================================================================
   13) Forms
   ========================================================================== */
.row {
  display: flex;
  gap: 0.5rem;
  align-items: center;
}

.row.row--dcc {
  display: grid;
  grid-template-columns: 1fr max-content max-content; /* input | read | write */
  align-items: center;
  column-gap: 0.5rem;
}

.row.row--stack {
  justify-items: start;
}

[hidden].row {
  display: none !important;
}

#locoDccAddress {
  grid-column: 1;
  grid-row: 1;
}
#locoReadAddress {
  grid-column: 2;
  grid-row: 1;
  justify-self: start;
  align-self: center;
  white-space: nowrap;
}
#locoWriteAddress {
  grid-column: 3;
  grid-row: 1;
  justify-self: start;
  align-self: center;
  white-space: nowrap;
}

#rosterSystemNameError,
#turnoutSystemNameError {
  grid-column: 1 / -1;
  margin-top: 0.25rem;
}

#rosterSystemNameError {
  grid-row: 2;
}

#turnoutSystemNameError {
  grid-row: 3;
}
.form-col .grid {
  display: grid;
  grid-template-columns: 1fr;
  gap: 0.625rem 0.75rem;
}

.form-col .grid label {
  display: grid;
  gap: 0.375rem;
  font-size: 0.95rem;
}

select,
input.fn-num-input,
input.fn-label-input,
.form-col .grid input {
  padding: 0.5rem 0.625rem;
  border: 0.0625rem solid var(--line);
  border-radius: 0.375rem;
  font-size: 1rem;
  -webkit-text-size-adjust: 100%;
  text-size-adjust: 100%;
  background-clip: padding-box;
}

select {
  -webkit-appearance: none;
  appearance: none;
  overflow: hidden;
  background: var(--background);
  cursor: pointer;
  background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 24 24'><path d='M6 9l6 6 6-6' fill='none' stroke='%236b6b6b' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'/></svg>");
  background-repeat: no-repeat;
  background-position: right 0.75rem center;
  background-size: 0.875rem 0.875rem;
}

input.fn-num-input {
  padding: 0.5rem 0.125rem 0.5rem 0.625rem;
  width: 70%;
}
input.fn-label-input {
  width: 90%;
}

select:focus,
input.fn-num-input:focus,
input.fn-label-input:focus,
.form-col .grid input:focus {
  outline: 0.125rem solid var(--accent);
  outline-offset: 0.125rem;
}

select:hover,
input.fn-num-input:hover,
input.fn-label-input:hover,
.form-col .grid input:hover {
  border: 0.0625rem solid var(--accent);
}

/* Ensure options follow theme (especially in dark mode) */
select option {
  color: var(--text);
  background: var(--background);
}

/* Improve tap feel on iOS */
select,
input {
  -webkit-tap-highlight-color: transparent;
}

input[aria-invalid="true"],
select[aria-invalid="true"],
textarea[aria-invalid="true"] {
  border-color: var(--error) !important;
  background: var(--error-background);
}

/* Clear, high-contrast focus when invalid */
input[aria-invalid="true"]:focus,
select[aria-invalid="true"]:focus,
textarea[aria-invalid="true"]:focus {
  outline: 0.125rem solid var(--error);
  outline-offset: 0.125rem;
  box-shadow: none;
}

/* ==========================================================================
   14) Functions list (cards)
   ========================================================================== */
#fnAdd {
  flex: 0 0 auto;
  width: auto;
}

#fnCopySelect {
  flex: 1 1 auto;
  min-width: 0;
}

.fn-actions {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
  align-items: center;
  margin: 0.5rem 0;
}

.fn-list {
  list-style: none;
  padding: 0;
  margin: 0;
  display: grid;
  gap: 0.625rem;
}

.fn-card {
  border-bottom: 0.0625rem solid var(--line);
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  display: grid;
  gap: 1rem;
  background: var(--background);
}

.fn-row {
  display: grid;
  grid-template-columns: 4.5ch 1fr auto auto;
  gap: 0.5rem;
  align-items: center;
}

.fn-label {
  width: 90%;
}

.fn-label-input {
  width: 100%;
}

.fn-lock {
  display: flex;
  align-items: center;
  gap: 1rem;
  white-space: nowrap;
}

.fn-btn {
  appearance: none;
  border: 0;
  background: var(--background);
  padding: 0.5rem 0.625rem;
  border-radius: 0.375rem;
  cursor: pointer;
}

.fn-extra-actions {
  display: flex;
  justify-content: flex-end;
}

.fn-advanced {
  display: grid;
  gap: 1rem;
}
[hidden].fn-advanced {
  display: none;
}

.fn-error {
  color: var(--error);
  font-size: 0.85rem;
}

/* Prevent overflow */
#fnDetails,
.fn-list,
.fn-card {
  max-width: 100%;
}

/* ==========================================================================
   15) Toast
   ========================================================================== */
.toast {
  position: fixed;
  left: 50%;
  bottom: 1rem;
  will-change: transform, opacity;
  transform: translate(-50%, 0.5rem);
  background: var(--menu-background);
  color: var(--button-text);
  padding: 0.625rem 0.75rem;
  border-radius: 0.375rem;
  opacity: 0;
  transition:
    opacity 0.2s ease,
    transform 0.2s ease;
}
.toast.show {
  opacity: 1;
  transform: translate(-50%, 0);
}

/* ==========================================================================
   16) Busy overlay (global)
   ========================================================================== */
/* Top-layer busy modal dialog */
dialog#appBusy {
  border: none;
  padding: 0;
  background: transparent;
  inset: 0;
  width: min(90vw, 26.25rem);
  display: grid;
  place-items: center;
}
dialog#appBusy::backdrop {
  background: var(--busy-overlay);
  -webkit-backdrop-filter: saturate(1.2) blur(0.125rem);
  backdrop-filter: saturate(1.2) blur(0.125rem);
}

/* Fallback <div> overlay (non-dialog browsers) */
#appBusy:not(dialog) {
  position: fixed;
  inset: 0;
  display: none;
  align-items: center;
  justify-content: center;
  background: var(--busy-overlay);
  -webkit-backdrop-filter: saturate(1.2) blur(0.125rem);
  backdrop-filter: saturate(1.2) blur(0.125rem);
  z-index: 9999;
}
#appBusy.active {
  display: flex;
}

#appBusy .panel {
  min-width: 13, 75rem;
  max-width: 90vw;
  padding: 0.875rem 1.125rem;
  border-radius: 0.375rem;
  background: var(--menu-background);
  box-shadow: 0 0.75rem 2.5rem var(--busy-overlay);
  color: var(--line);
  display: flex;
  gap: 0.75rem;
  align-items: center;
  font:
    500 0.875rem/1.4 system-ui,
    -apple-system,
    Segoe UI,
    Roboto,
    Helvetica,
    Arial;
}

#appBusy .spinner {
  width: 1.25rem;
  height: 1.25rem;
  border: 0.1875rem solid var(--busy-overlay);
  border-top-color: var(--line);
  border-radius: 50%;
  animation: appBusySpin 1s linear infinite;
}

@keyframes appBusySpin {
  to {
    transform: rotate(360deg);
  }
}

/* ==========================================================================
   17) Turnout icons (SVG)
   ========================================================================== */
.turnout-icon .trk {
  stroke: var(--turnout-stroke);
}
.turnout-icon.closed .diverge {
  stroke: var(--turnout-stroke);
  opacity: 0.35;
}
.turnout-icon.closed .base {
  stroke: var(--accent);
}
.turnout-icon.thrown .diverge {
  stroke: var(--accent);
}
.turnout-icon.thrown .base {
  stroke: var(--turnout-stroke);
  opacity: 0.6;
}

/* Unknown-state badge */
.turnout-icon .badge-ring {
  fill: none;
  stroke-width: 2;
}
.turnout-icon.unknown .badge-ring,
.turnout-icon.unknown .badge-text {
  stroke: var(--accent, var(--accent-hover));
  fill: var(--accent, var(--accent-hover));
}
/* Slightly dim tracks when unknown (visual hint) */
.turnout-icon.unknown .trk {
  opacity: 0.7;
}

/* ==========================================================================
   17a) Lights icons (SVG)
   ========================================================================== */
.light-icon {
  width: 64px;
  height: 64px;
}

.light-icon .on-state,
.light-icon .off-state {
  stroke: var(--light-stroke);
}

.light-icon.off .off-state .active-outline,
.light-icon.on .on-state .active-outline {
  stroke: var(--accent);
}

/* Slightly dim bulb when unknown (visual hint) */
.light-icon.unknown .off-state .active-outline,
.light-icon.unknown .on-state .active-outline {
  opacity: 0.7;
}

.light-icon .on-state,
.light-icon .off-state {
  display: none;
}

.light-icon .off-state {
  display: inline;
}

.light-icon.on .off-state {
  display: none;
}

.light-icon.on .on-state {
  display: inline;
}

/* ==========================================================================
   18) Responsive
   ========================================================================== */
@media (min-width: 62.5rem) {
  .panel-body {
    grid-template-columns: repeat(2, 1fr);
  }
}

@media (min-width: 93.75rem) {
  .drawer {
    transform: none;
    position: sticky;
  }
  .main {
    margin-left: 0;
  }
  .panel-body {
    grid-template-columns: repeat(3, 1fr);
  }
  #menuBtn {
    display: none;
  }
}

@media (min-width: 118.75rem) {
  .panel-body {
    grid-template-columns: repeat(4, 1fr);
  }
}

@media (max-width: 45rem) {
  .modal {
    width: 100vw;
    height: 100dvh;
    max-height: calc(100dvh - 1rem);
  }

  .row.row--dcc {
    grid-template-columns: 1fr 1fr;
    grid-template-areas:
      "input input"
      "read  write"
      "error error";
    row-gap: 0.5rem;
    column-gap: 0.5rem;
  }

  #locoReadAddress,
  #locoWriteAddress {
    justify-self: stretch;
  }

  .row.row--dcc .btn,
  .row.row--dcc .btn-primary {
    width: 100%;
  }

  /* Explicit placement */
  #locoDccAddress {
    grid-column: 1 / -1;
  }
  #locoReadAddress {
    grid-column: 1;
    grid-row: 2;
  }
  #locoWriteAddress {
    grid-column: 2;
    grid-row: 2;
  }

  #toSystemNameError {
    grid-row: 3;
  }

  #locoDecoderSelect {
    grid-column: 1 / -1;
    grid-row: 1;
    padding-right: 1.75rem;
  }

  #locoDecoderRead {
    grid-column: 1 / -1;
    grid-row: 2;
  }

  #jmriConnectionSelect {
    grid-column: 1 / -1;
  }

  .copy-popover {
    left: 50% !important;
    transform: translateX(-50%) !important;
    top: 2.5vh !important;
    width: min(95vw, 32.5rem);
    max-height: 95vh;
    border-radius: 0.375rem;
  }
}
